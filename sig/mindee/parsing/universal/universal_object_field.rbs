# lib/mindee/parsing/universal/universal_object_field.rb
module Mindee
  module Parsing
    module Universal
      class UniversalObjectField
        attr_reader all_values: Hash[String | Symbol, Hash[String | Symbol, untyped] | Integer | String | Float | bool | nil]
        attr_reader confidence: Float
        attr_reader page_id: Integer
        attr_reader raw_value: String

        def initialize: (Hash[Symbol | String, untyped], ?Integer?) -> void
        def str_level: (?Integer) -> String
        def method_missing: (Symbol, *Array[untyped]) -> (Hash[String | Symbol, untyped] | Integer | String | Float | bool | nil)
        def respond_to_missing?: (Symbol, ?bool) -> bool
        def to_s: -> String
        def handle_position_field: (String | Symbol, Hash[String | Symbol, untyped] | Integer | String | Float | bool | nil, Integer?) -> void
        def handle_default_field: (String | Symbol, Hash[String | Symbol, untyped] | Integer | String | Float | bool | nil) -> void
      end
      def self.universal_object?: (Hash[Symbol | String, untyped]) -> bool
    end
  end
end
