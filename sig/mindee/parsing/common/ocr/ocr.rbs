# lib/mindee/parsing/common/ocr/ocr.rb
module Mindee
  module Parsing
    module Common
      module OCR
        class OCRWord
          attr_reader bounding_box: Geometry::Quadrilateral
          attr_accessor confidence: Float
          attr_reader polygon: Geometry::Polygon
          attr_reader text: String

          def initialize: (Hash[String | Symbol, untyped]) -> void
          def to_s: -> String
        end
        class OCRLine < Array[OCRWord]
          def initialize: (?Array[untyped]?, ?Array[OCRWord]?) -> void
          def sort_on_x: -> OCRLine
          def to_s: -> String
        end
        class OCRPage
          attr_reader all_words: Array[OCRWord]
          attr_reader lines: Array[OCRLine]

          def initialize: (Hash[String | Symbol, untyped]) -> void
          def all_lines: -> Array[OCRLine]
          def to_s: -> String
          def parse_one: (Array[OCRWord], OCRWord, Array[Integer], Array[OCRLine]) -> Array[OCRLine]?
          def to_lines: -> Array[OCRLine]
          def words_on_same_line?: (OCRWord, OCRWord) -> bool
        end
        class OCR
          attr_reader mvision_v1: MVisionV1

          def initialize: (Hash[String | Symbol, untyped]) -> void
          def to_s: -> String
          def reconstruct_vertically: (Array[Geometry::Point], Integer, ?Float) -> OCRLine
        end
      end
    end
  end
end
