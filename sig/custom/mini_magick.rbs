# Stub for the mini_magick library.
module MiniMagick
  class Image
    def format: (String, ?Integer?, ?Hash[Symbol, untyped]?) -> Net::BufferedIO
    def self.format: (String, ?Integer?, ?Hash[Symbol, untyped]?) -> Net::BufferedIO
    def self.quality: (String) -> Net::BufferedIO
    def self.crop: (String) -> Net::BufferedIO
    def self.height: () -> Integer
    def height: () -> Integer
    def self.width: () -> Integer
    def width: () -> Integer
    def self.read: (String | StringIO?) -> self
    def self.resolution: () -> Array[Float | Integer]
    def self.write: (StringIO | String) -> Net::BufferedIO
    def write: (StringIO | String) -> Net::BufferedIO
    def quality: (Integer) -> void
    def self.resize: (String) -> void
    def resize: (String) -> void
    def self.to_blob: () -> String
    def to_blob: () -> String
    def self.[]: (?untyped) -> untyped
    def []: (?untyped) -> untyped
  end
end